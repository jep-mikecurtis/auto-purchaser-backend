{"version":3,"sources":["redux/actions/auth/AuthTypes.ts","redux/reducers/AuthReducer.ts","redux/reducers/AutoReducer.ts","redux/actions/auto/AutoTypes.ts","redux/reducers/RootReducer.ts","redux/store.ts","redux/actions/auth/AuthActions.ts","layout/Layout.tsx","redux/actions/auto/AutoActions.ts","components/Card.tsx","components/types/InputTypes.ts","components/Inputs.tsx","components/types/ButtonsTypes.ts","pages/Home.tsx","pages/Dashboard.tsx","pages/auth/Register.tsx","pages/auth/Login.tsx","router.tsx","index.tsx"],"names":["AUTH_REGISTER","AUTH_REGISTER_FAIL","AUTH_LOGIN","AUTH_LOGIN_FAIL","AUTH_LOGOUT","DefaultState","success","user","auth","localStorage","getItem","JSON","parse","autos","authReducer","state","action","type","payload","errors","AUTO_CREATE","AUTO_GET","autoReducer","RootReducer","history","combineReducers","router","connectRouter","auto","createBrowserHistory","Store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","url","Layout","children","useSelector","dispatch","useDispatch","className","to","onClick","a","store","getState","axios","post","res","removeItem","replace","data","GetAutos","setItem","stringify","console","log","Card","imgSrc","style","background","backgroundSize","backgroundPosition","backgroundRepeat","InputClasses","InputText","label","name","password","email","inputValue","setState","shouldDisable","htmlFor","value","disabled","onChange","e","target","InputMoney","thousandSeparator","prefix","InputNumber","minNum","maxNum","min","max","format","val","undefined","ButtonClass","Home","useState","step","setStep","purchasePrice","setPurchasePrice","autoMake","setAutoMake","autoModel","setAutoModel","yearly_income","yearlyIncome","setYearlyIncome","credit_score","creditScore","setCreditScore","setName","setEmail","stepOneComlete","stepTwoComplete","nextStep","AutoApply","purchase_price","auto_make","auto_model","Dashboard","useEffect","map","displayType","id","Register","setPassword","passwordConfirm","setPasswordConfirm","message","AuthRegister","Login","error","AuthLogin","RouterComponent","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45ec2149.chunk.js","sourcesContent":["export const AUTH_REGISTER = 'AUTH_REGISTER';\nexport const AUTH_REGISTER_FAIL = 'AUTH_REGISTER_FAIL';\nexport const AUTH_LOGIN = 'AUTH_LOGIN';\nexport const AUTH_LOGIN_FAIL = 'AUTH_LOGIN_FAIL';\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\n// Register Typs\nexport type RegisterType = {\n    email: string\n    name: string\n    password: string\n    passwordConfirm: string\n}\n\n// Type Coming From Backend\nexport type  AuthResponseType = {\n    success: boolean\n    data: {\n        email: string\n        name: string\n        api_token: string\n    }\n    errors?: [\n        {}\n    ]\n}\n\n// Type For Auth State\nexport type AuthStateType = {\n    auth: {\n        success?: boolean\n        errors?: {\n            name?: []\n            email?: []\n            error?: []\n            password?: []\n            passwordConfirm?: []\n        }\n    }\n}\n\nexport type AuthType = {\n\n    success: boolean\n    user: {\n        email: string\n    }\n\n}\n\n\n// Login Types\nexport type LoginType = {\n    email: string\n    password: string\n}\n\n","import { AUTH_REGISTER, AUTH_REGISTER_FAIL, AUTH_LOGIN, AUTH_LOGIN_FAIL, AUTH_LOGOUT, AuthResponseType } from '../actions/auth/AuthTypes'\n\n// Default State && Type\ntype DefaultStateType = {\n    success: boolean\n    user: {\n        name?: string,\n        email?: string,\n        api_token?: string\n    }\n    errors?: []\n}\nconst DefaultState: DefaultStateType = {\n    success: false,\n    user: {}\n};\n\n// Action Type For Auth Reducer\ntype ActionType = {\n    type: string,\n    payload: AuthResponseType\n}\n\n//Check If Auth Was Saved To Local Storage\n// And Set Default State\nlet auth = null;\nif (localStorage.getItem('auth')) {\n    auth = JSON.parse(localStorage.getItem('auth') || \"{}\");\n    DefaultState.success = true\n    DefaultState.user = auth\n}\n\nconst authReducer = (state: DefaultStateType = DefaultState, action: ActionType) => {\n    switch (action.type) {\n        case AUTH_REGISTER:\n            return {\n                success: true,\n                user: action.payload\n            }\n        case AUTH_REGISTER_FAIL:\n            return {\n                success: false,\n                errors: action.payload\n            }\n        case AUTH_LOGIN:\n            return {\n                success: true,\n                user: action.payload\n            }\n        case AUTH_LOGIN_FAIL:\n            return {\n                success: false,\n                errors: action.payload\n            }\n        case AUTH_LOGOUT:\n            return {\n                success: false,\n                user: {}\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","import {AutoType, AUTO_CREATE, AUTO_GET} from '../actions/auto/AutoTypes';\n\nlet DefaultState: AutoType[] = [];\n\ntype ActionType = {\n    type:  string,\n    payload: AutoType\n}\n\n//Check If Auto Was Saved To Local Storage\n// And Set Default State\nlet autos: AutoType[];\nif (localStorage.getItem('autos')) {\n    autos = JSON.parse(localStorage.getItem('autos') || \"{}\");\n    DefaultState = autos\n}\n\nconst autoReducer = (state: AutoType[] = DefaultState, action: ActionType) => {\n    switch(action.type) {\n        case AUTO_CREATE:\n            return [...state, action.payload]\n        case AUTO_GET:\n            return action.payload\n        default: \n            return state;\n    }\n}\n\nexport default autoReducer;","export const AUTO_CREATE = \"AUTO_CREATE\";\nexport const AUTO_GET = \"AUTO_GET\";\n\nexport type AutoType = {\n    id?: number\n    email: string\n    name: string,\n    purchase_price: string,\n    auto_make: string,\n    auto_model: string,\n    yearly_income: string,\n    credit_score: number,\n    message?: string\n}\n\nexport type GetAutoData = {\n    email: string\n}\n\n// Auto State Type From Store\nexport type AutoStateType = {\n    auto: AutoType[]\n}","import {combineReducers} from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\n// REDUCERS\nimport authReducer from './AuthReducer';\nimport autoReducer from './AutoReducer';\n\nconst RootReducer = (history: any) => combineReducers({\n    router: connectRouter(history),\n    auth: authReducer,\n    auto: autoReducer\n});\n\nexport default RootReducer;\n","import {createStore, applyMiddleware} from \"redux\";\r\nimport RootReducer from './reducers/RootReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk'\r\nimport { routerMiddleware } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory()\r\n\r\nconst Store = createStore(RootReducer(history), composeWithDevTools(applyMiddleware(routerMiddleware(history), thunk)));\r\n\r\nexport default Store;\r\n","import axios from 'axios'\nimport {Dispatch} from 'redux'\nimport {history} from '../../store';\nimport store from '../../store';\n\n// Types\nimport {AUTH_REGISTER, AUTH_REGISTER_FAIL, AUTH_LOGIN, AUTH_LOGIN_FAIL, AUTH_LOGOUT, RegisterType, AuthResponseType, AuthType, LoginType} from './AuthTypes'\n\n\nconst url = \"https://dev-test-mcbackend.herokuapp.com/\";\n\nexport const AuthRegister = (data: RegisterType) =>  async (dispatch: Dispatch) => {\n    try {\n        const res: AuthResponseType = (await axios.post(url + 'api/register', data)).data;\n        if(res.success) {\n            dispatch({\n                type: AUTH_REGISTER,\n                payload: res.data\n            })\n            history.replace('/dashboard')\n        } else {\n            dispatch({\n                type: AUTH_REGISTER_FAIL,\n                payload: res.errors\n            })\n        }\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nexport const AuthLogin = (data: LoginType) => async (dispatch: Dispatch) => {\n    try {\n        const res: AuthResponseType = (await axios.post(url + 'api/login', data)).data;\n        localStorage.setItem('auth', JSON.stringify(res.data));\n        \n        if(res.success) {\n            dispatch({\n                type: AUTH_LOGIN,\n                payload: res.data\n            })\n   \n            history.replace('/dashboard')\n        } else {\n            dispatch({\n                type: AUTH_LOGIN_FAIL,\n                payload: res.errors\n            })\n        }\n\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nexport const AuthLogout = () => async (dispatch: Dispatch) => {\n    try {\n        const auth: AuthType = store.getState().auth;\n        if(auth.success) {\n            const res = await axios.post(url + 'api/logout', auth.user);\n            localStorage.removeItem('auth');\n            history.replace('/')\n\n            if(res.data.success) {\n                dispatch({\n                    type: AUTH_LOGOUT,\n                    payload: {}\n                })   \n            }\n        }\n    } catch(err) {\n       \n    }\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {AuthLogout} from '../redux/actions/auth/AuthActions'\n\ntype AuthType = {\n    auth: {\n        success: boolean\n        user: {\n            email: string\n        }\n    }\n}\n\nconst Layout: React.FC = ({ children }) => {\n    const auth = useSelector((state: AuthType) => state.auth);\n    const dispatch = useDispatch();\n\n    const logout = () => {\n        dispatch(AuthLogout());\n    };\n\n    return (\n        <div className=\"layout flex flex-col min-h-screen bg-gray-700 text-gray-100\">\n            <nav className=\"bg-gray-900 py-2 px-4\">\n                <div className=\"container mx-auto flex justify-between\">\n                    {/* Right Side */}\n                    <ul>\n                        <li>\n                            <Link to=\"/\">\n                                DevTest\n                            </Link>\n                        </li>\n                    </ul>\n\n                    {/* Left Side */}\n                    {!auth.success ? \n                        // Is Auth\n                        <ul className=\"flex space-x-4\">\n                            <li>\n                                <Link to=\"/login\">\n                                    Login\n                                </Link>\n                            </li>\n                        </ul> :\n                        // Not Auth\n                        <ul className=\"flex space-x-4\">\n                            <li>\n                                <button onClick={logout}>Logout</button>\n                            </li>\n                        </ul>\n                    }\n                </div>\n            </nav>\n            <main className=\"flex-1 flex flex-col\">\n                {children}\n            </main>\n            <footer className=\"bg-gray-900 py-2 text-center\">\n                <p>Mike Curtis</p>\n            </footer>\n        </div>\n    )\n}\n\nexport default Layout;","import axios from 'axios'\nimport {Dispatch} from 'redux'\nimport {history} from '../../store';\nimport {AutoType, AUTO_CREATE, AUTO_GET, GetAutoData} from './AutoTypes';\nimport {AuthType} from '../auth/AuthTypes'\nimport store from '../../store';\n\nconst url = \"https://dev-test-mcbackend.herokuapp.com/\";\n\nexport const AutoApply = (data: AutoType) =>  async (dispatch: Dispatch) => {\n    const auth: AuthType = store.getState().auth;\n\n    try {\n        const res = (await axios.post(url + 'api/auto', data)).data;\n        if(res.success) {\n            dispatch({\n                type: AUTO_CREATE,\n                payload: res.data\n            })\n\n            if(auth.success) {\n                history.replace('/dashboard')\n            } else {\n                history.replace('/register')\n            }\n        } else {\n            history.replace('/')\n        }\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nexport const GetAutos = (data: GetAutoData) => async (dispatch: Dispatch) => {\n    try {\n        const res = (await axios.post(url + 'api/auto/get', data)).data;\n        localStorage.setItem('autos', JSON.stringify(res.data));\n  \n        if(res.success) {\n            dispatch({\n                type: AUTO_GET,\n                payload: res.data\n            })\n        }\n    } catch(err) {\n        console.log(err);\n    }\n}","import React from \"react\";\n\ntype CardProps = {\n  imgSrc: string;\n  children?: JSX.Element | JSX.Element[] | string | string[];\n};\n\nconst Card: React.FC<CardProps> = ({ imgSrc, children }: CardProps) => (\n  <div className=\"card rounded overflow-hidden shadow w-full\">\n    <div\n      className=\"card__header\"\n      style={{\n        background: `url(${imgSrc})`,\n        backgroundSize: \"auto 100%\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    ></div>\n    <div className=\"card__body p-10 flex flex-col justify-between\">{children}</div>\n  </div>\n);\n\nexport default Card;\n","export type InputType = {\n    label: string\n    name: string\n    setState?: any\n    minNum?: number\n    maxNum?: number\n    password?: boolean\n    email?: boolean\n    inputValue?: string | number\n    shouldDisable?: boolean\n}\n\ntype InputClassType = {\n    formGroup: string,\n    label: string,\n    input: string\n}\n\nexport const InputClasses: InputClassType = {\n    formGroup: 'form-group flex flex-col space-y-2 flex-1',\n    label: '',\n    input: 'rounded shadow py-1 px-2 text-gray-800 bg-gray-100 text-sm',\n}","import React from \"react\";\nimport { InputClasses, InputType } from \"./types/InputTypes\";\nimport NumberFormat from \"react-number-format\";\n\nexport const InputText: React.FC<InputType> = ({ label, name, password, email, inputValue, setState , shouldDisable }) => (\n  <div className={InputClasses.formGroup}>\n    <label htmlFor={name} className={InputClasses.label}>\n      {label}\n    </label>\n    <input\n      type={password ? 'password' : email ? 'email' : 'text'}\n      name={name}\n      value={inputValue}\n      className={shouldDisable ? InputClasses.input + ' bg-gray-400 cursor-not-allowed': InputClasses.input + ''}\n      disabled={shouldDisable}\n      onChange={(e) => setState(e.target.value)}\n    />\n  </div>\n);\n\nexport const InputMoney: React.FC<InputType> = ({ label, name, setState, inputValue }) => (\n  <div className={InputClasses.formGroup}>\n    <label htmlFor={name} className={InputClasses.label}>\n      {label}\n    </label>\n    <NumberFormat\n      thousandSeparator={true}\n      prefix={\"$\"}\n      name={name}\n      value={inputValue}\n      className=\"w-full bg-gray-300 border border-gray-800 rounded shadow-sm text-gray-800 py-1 pl-2\"\n      onChange={(e) => setState(e.target.value)}\n    />\n  </div>\n);\n\nexport const InputNumber: React.FC<InputType> = ({\n  label,\n  name,\n  setState,\n  minNum,\n  maxNum,\n  inputValue\n}) => {\n  // Check the value of the input\n  // Insure not lower than min or greater than max\n  const checkValue = (val: string) => {\n    // Check for a min max before a return\n    if (minNum !== undefined && maxNum !== undefined) {\n      if (+val > maxNum || +val < minNum) {\n        return \"\";\n      } else {\n        return val;\n      }\n    }\n    return val;\n  };\n  return (\n    <div className={InputClasses.formGroup}>\n      <label htmlFor={name} className={InputClasses.label}>\n        {label}\n      </label>\n      <NumberFormat\n        name={name}\n        min={minNum}\n        max={maxNum}\n        value={inputValue}\n        format={checkValue}\n        className=\"w-full bg-gray-300 border border-gray-800 rounded shadow-sm text-gray-800 py-1 pl-2\"\n        onChange={(e) => setState(e.target.value)}\n      />\n    </div>\n  );\n};\n","type ButtonClassType = {\n    primary: string\n    primaryDisabled: string\n}\n\nexport const ButtonClass: ButtonClassType = {\n    primary: \"w-full border border-white text-white py-1 px-4 rounded-sm\",\n    primaryDisabled: \"w-full border border-white text-white py-1 px-4 rounded-sm opacity-25 cursor-not-allowed\"\n}","import React, { useState } from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\n\n// Types\nimport {AutoType, AutoStateType} from '../redux/actions/auto/AutoTypes';\n\n// Actions\nimport {AutoApply} from '../redux/actions/auto/AutoActions';\n\n// Components\nimport Card from \"../components/Card\";\nimport { InputText, InputMoney, InputNumber } from \"../components/Inputs\";\nimport { ButtonClass } from \"../components/types/ButtonsTypes\";\n\n\nconst Home = () => {\n  // Init Dispatch\n  const dispatch = useDispatch();\n\n  // Get Autos From Redux Store\n  const auto = useSelector((state: AutoStateType) => state.auto);\n\n  // State\n  const [step, setStep] = useState(1);\n  const [purchasePrice, setPurchasePrice] = useState(\"\");\n  const [autoMake, setAutoMake] = useState(\"\");\n  const [autoModel, setAutoModel] = useState(\"\");\n  const [yearlyIncome, setYearlyIncome] = useState(auto[0]?.yearly_income ?? \"\");\n  const [creditScore, setCreditScore] = useState(auto[0]?.credit_score ?? null);\n  const [name, setName] = useState(auto[0]?.name ?? \"\");\n  const [email, setEmail] = useState(auto[0]?.email ?? \"\");\n\n  // Check State Before Going To The Next Step\n  const stepOneComlete = purchasePrice !== \"\" &&\n                          autoMake !== \"\" &&\n                          autoModel !== \"\" &&\n                          yearlyIncome !== \"\" &&\n                          creditScore !== 0 &&\n                          creditScore >= 300;\n\n  const stepTwoComplete = name !== \"\" && email !== \"\";\n\n  const nextStep = (step: number | string) => {\n    if (step === 2) {\n      setStep(2);\n    }\n\n    if (step === 'complete') {\n      const data: AutoType = {\n        email,\n        name,\n        purchase_price: purchasePrice,\n        auto_make: autoMake,\n        auto_model: autoModel,\n        yearly_income: yearlyIncome,\n        credit_score: creditScore\n      }\n\n      dispatch(AutoApply(data));\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto flex justify-center py-20\">\n      {step === 1 && (\n        <Card imgSrc=\"https://images.unsplash.com/photo-1489824904134-891ab64532f1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1489&q=80\">\n          <div className=\"flex flex-wrap\">\n            <h1 className=\"text-white font-bold flex-auto text-xl font-semibold\">\n              Welcome To Auto Purchaser\n            </h1>\n\n            <div className=\"w-full flex-none text-sm font-bold text-green-300 mt-2 text-xl\">\n              Over 10,000 Vehicle Types \n            </div>\n          </div>\n          <p className=\"mt-4 text-sm text-gray-200\">\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet\n            aperiam architecto aspernatur eveniet in mollitia nisi nulla rerum\n            vel. Expedita?\n          </p>\n          <div className=\"flex flex-col space-y-2 mt-4\">\n            <InputMoney name=\"purchase_price\" label=\"Auto Purchase Price\" setState={setPurchasePrice}/>\n            <div className=\"flex space-x-2\">\n              <InputText name=\"auto_make\" label=\"Auto Make\" setState={setAutoMake}/>\n              <InputText name=\"auto_model\" label=\"Auto Model\" setState={setAutoModel}/>\n            </div>\n            <InputMoney name=\"yearly_income\" label=\"Estimated Yearly Income\" inputValue={yearlyIncome} setState={setYearlyIncome}/>\n            <InputNumber\n              name=\"credit_score\"\n              label=\"Estimated Credit Score ( 300 - 850 )\"\n              minNum={0}\n              maxNum={850}\n              setState={setCreditScore}\n              inputValue={creditScore}\n            />\n\n            {/* Submit Button */}\n            <div className=\"pt-4\">\n              <button\n                className={stepOneComlete ? ButtonClass.primary : ButtonClass.primaryDisabled}\n                onClick={() => nextStep(2)}\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        </Card>\n      )}\n      {step === 2 && (\n        <Card imgSrc=\"https://images.unsplash.com/photo-1550355291-bbee04a92027?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=676&q=80\">\n          <div className=\"flex flex-wrap\">\n            <h1 className=\"text-white font-bold flex-auto text-xl font-semibold\">\n              Welcome To Auto Purchaser\n            </h1>\n\n            <div className=\"w-full flex-none text-sm font-bold text-green-300 mt-2 text-xl\">\n              Over 10,000 Vehicle Types\n            </div>\n          </div>\n          <p className=\"mt-4 text-sm text-gray-200\">\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet\n            aperiam architecto aspernatur eveniet in mollitia nisi nulla rerum\n            vel. Expedita?\n          </p>\n          <div className=\"flex flex-col space-y-2 mt-4\">\n            <InputText name=\"name\" label=\"Name\" inputValue={name} setState={setName}/>\n            <InputText name=\"email\" label=\"Email\" inputValue={email} setState={setEmail}/>\n            {/* Submit Button */}\n            <div className=\"pt-4\">\n              <button className={stepTwoComplete ? ButtonClass.primary : ButtonClass.primaryDisabled}\n              onClick={() => nextStep(\"complete\")}>Submit</button>\n            </div>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, {useEffect, useState} from 'react';\nimport {history} from '../redux/store';\nimport { useSelector } from 'react-redux';\nimport Card from \"../components/Card\";\nimport NumberFormat from 'react-number-format'\n\n// Types\nimport {AutoType} from '../redux/actions/auto/AutoTypes';\ntype AutoTypeArr = {\n    auto: AutoType[]\n}\n\ntype AuthType = {\n    auth: {\n        success: boolean\n        user: {\n            email: string\n        }\n    }\n}\n\nconst Dashboard = () => {\n    const auth = useSelector((state: AuthType) => state.auth);\n    const autos = useSelector((state: AutoTypeArr) => state.auto);\n    \n    useEffect(() => {\n        console.log(auth);\n        if(!auth.success) {\n            history.replace('/login')\n        }\n    })\n    return (\n        <div className=\"container mx-auto flex justify-center py-20\">\n            <Card imgSrc=\"https://images.unsplash.com/photo-1430080369629-afa4c2ae5121?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\">\n                <h1 className=\"text-white font-bold flex-auto text-xl font-semibold\">\n                    Dashboard\n                </h1>\n\n                {/* This will be for custom message */}\n                <div className=\"w-full flex-none text-sm font-bold text-green-300 mt-2 text-xl\">\n                    Current Auto Purchases\n                </div>\n\n                <div className=\"flex flex-col space-y-4 mt-4\">\n                    {autos.map((auto) => (\n                        <div key={auto.id}>\n                            <div className=\"text-sm\">\n                                <p> \n                                    <b>Make: </b> {auto.auto_make} {auto.auto_model}\n                                </p>\n                                <p>\n                                    <b>Price: </b> <NumberFormat value={auto.purchase_price} displayType={'text'} thousandSeparator={true} prefix={'$'} />\n                                </p>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Dashboard","import React, { useState } from 'react';\nimport {useDispatch} from 'react-redux';\nimport { useSelector } from 'react-redux';\n\n// Actions\nimport {AuthRegister} from '../../redux/actions/auth/AuthActions';\nimport {GetAutos} from '../../redux/actions/auto/AutoActions'\n\n// Components\nimport Card from \"../../components/Card\";\nimport { InputText } from \"../../components/Inputs\";\nimport { ButtonClass } from \"../../components/types/ButtonsTypes\";\nimport {AutoStateType} from '../../redux/actions/auto/AutoTypes';\n\n// Types\nimport {AuthStateType} from '../../redux/actions/auth/AuthTypes'\n\nconst Register = () => {\n    const dispatch = useDispatch();\n\n    // Get Autos From Redux Store\n    const auto = useSelector((state: AutoStateType) => state.auto);\n\n    // Get Register State\n    const registerState = useSelector((state: AuthStateType) => state.auth);\n    const errors = registerState.errors;\n    \n    // SETUP STATE\n    const [name, setName] = useState(auto[0]?.name ?? '');\n    const [email, setEmail] = useState(auto[0]?.email ?? '');\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n\n    const handleSubmit = () => {\n        const data = {\n            name,\n            email,\n            password,\n            passwordConfirm\n        }\n\n        dispatch(AuthRegister(data))\n        dispatch(GetAutos(data))\n    }\n\n    const disableName = name !== '';\n    const disableEmail = email !== '';\n\n    return (\n        <div className=\"container mx-auto flex justify-center py-20\">\n            <Card imgSrc=\"https://images.unsplash.com/photo-1493238792000-8113da705763?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\">\n                <h1 className=\"text-white font-bold flex-auto text-xl font-semibold\">\n                    Create New Account\n                </h1>\n\n                {/* This will be for custom message */}\n                <div className=\"w-full flex-none text-sm font-bold text-green-300 mt-2 text-xl\">\n                    {auto[0]?.message}\n                </div>\n\n                {/* Register FORM */}\n                <div className=\"flex flex-col space-y-2 mt-4\">\n                    {/* Name */}\n                    <InputText inputValue={name} name=\"name\" label=\"Name\" setState={setName}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.name}</small>\n\n                    {/* Email */}\n                    <InputText inputValue={email} name=\"email\" label=\"Email\" setState={setEmail}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.email}</small>\n\n                    {/* Password */}\n                    <InputText name=\"password\" label=\"Password\" password={true} setState={setPassword}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.password}</small>\n\n                    {/* Password Confirm */}\n                    <InputText name=\"password_confirm\" label=\"Confirm Password\" password={true} setState={setPasswordConfirm}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.passwordConfirm}</small>\n\n                    <div className=\"py-4\">\n                        <button className={ButtonClass.primary}\n                         onClick={handleSubmit}>Create</button>\n                    </div>\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Register","import React, { useEffect, useState } from 'react';\nimport {useDispatch} from 'react-redux';\nimport { useSelector } from 'react-redux';\n\n// Actions\nimport {AuthLogin} from '../../redux/actions/auth/AuthActions';\nimport {GetAutos} from '../../redux/actions/auto/AutoActions'\n\n// Types\nimport {AuthStateType} from '../../redux/actions/auth/AuthTypes'\n\n// Components\nimport Card from \"../../components/Card\";\nimport { InputText } from \"../../components/Inputs\";\nimport { ButtonClass } from \"../../components/types/ButtonsTypes\";\n\n\nconst Login = () => {\n    const dispatch = useDispatch();\n\n    // Get Register State\n    const registerState = useSelector((state: AuthStateType) => state.auth);\n    const errors = registerState.errors;\n    \n    // SETUP STATE\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    // Handle Form Submit Dispatch Actions\n    const handleSubmit = () => {\n        const data = {\n            email,\n            password,\n        }\n\n        // Dispatch Login && Get all autos array\n        dispatch(AuthLogin(data))\n        dispatch(GetAutos(data))\n    }\n\n    return (\n        <div className=\"container mx-auto flex justify-center py-20\">\n            <Card imgSrc=\"https://images.unsplash.com/photo-1557116544-1fb2be0d8e00?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\">\n                <h1 className=\"text-white font-bold flex-auto text-xl font-semibold\">\n                    Login\n                </h1>\n\n                <p className=\"text-pink-600\">\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Eaque possimus totam et voluptate nesciunt, quae ab quisquam esse maiores pariatur?\n                </p>\n\n                {/* Register FORM */}\n                <div className=\"flex flex-col space-y-2 mt-4\">\n                    {/* Email */}\n                    <InputText inputValue={email} name=\"email\" label=\"Email\" setState={setEmail}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.email}</small>\n\n                    {/* Password */}\n                    <InputText name=\"password\" label=\"Password\" password={true} setState={setPassword}/>\n                    <small className=\"text-red-600 text-xs\">{errors?.error}</small>\n\n                    <div className=\"py-4\">\n                        <button className={ButtonClass.primary}\n                         onClick={handleSubmit}>Login</button>\n                    </div>\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Login\n","import * as React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport { history }  from './redux/store';\n\n// Main Layoit\nimport Layout from './layout/Layout';\n\n// Pages\nimport Home from './pages/Home';\nimport Dashboard from './pages/Dashboard';\nimport Register from './pages/auth/Register'\nimport Login from './pages/auth/Login'\n\n\nexport const RouterComponent = () => (\n    <Router>\n        <ConnectedRouter history={history}>\n            <Layout>\n                <Switch>\n                    <Route path=\"/\" exact component={Home}/>\n                    <Route path=\"/dashboard\" component={Dashboard}/>\n                    <Route path=\"/register\" component={Register}/>\n                    <Route path=\"/login\" component={Login}/>\n                </Switch>\n            </Layout>\n        </ConnectedRouter>\n    </Router>\n)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/Tailwind.scss';\r\nimport './scss/App.scss';\r\nimport {RouterComponent} from \"./router\";\r\nimport store  from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <RouterComponent />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}